#!/bin/bash

function _pau_die {
    [[ -z "$1" ]] || echo $1
    exit 1
}

function _pau_usage() {
    cat <<USAGE

Example:

    # Installs ccdiff from App::ccdiff to a self-contained local::lib directory,
    # then expose ccdiff to ~/.local/bin/ccdiff
    pau install ccdiff

    # ditto for perlfind from App::perlfind
    pau install perlfind

    # Installs mbtiny from App::ModuleBuildTiny
    pau install -M App::ModuleBuildTiny mbtiny

    # List installed units
    pau list

    # Deletes perlfind
    pau delete perlfind

USAGE
}

function _pau_shim {
    NAME=$1
    APPDIR=$2
    SHIM=~/.local/pau/shims/$NAME
    mkdir -p ~/.local/pau/shims

    cat <<EOF >$SHIM
#!/bin/bash
export PATH=$APPDIR/bin:$PATH
export PERL5LIB=$APPDIR/lib/perl5
exec $PERL $APPDIR/bin/$NAME "\$@"
EOF
    chmod +x $SHIM

    ln -s $SHIM ~/.local/bin/$NAME
}

function _pau_install_app_from_dist {
    [[ -z "$1" ]] && _pau_die "ERROR: an app name is required"
    [[ -z "$2" ]] && _pau_die "ERROR: an dist name is required"

    NAME=$1
    DIST=$2

    [[ -f ~/.local/pau/bin/$NAME ]] && _pau_die "ERROR: $NAME already exists."

    APPDIR=~/.local/pau/installations/$NAME

    cpm install -L $APPDIR $DIST

    _pau_shim $NAME $APPDIR
}

function _pau_install {
    DIST=

    local OPTIND o
    while getopts M: o; do
          case "$o" in
              M)
                  DIST=$OPTARG
                  ;;
              *)
                  echo $OPTARG XXX
                  ;;
          esac
    done

    shift $((OPTIND-1))
    NAME=$1
    [[ -z "$NAME" ]] && _pau_die "ERROR: an app name is required."
    [[ -z "$DIST" ]] && DIST=App::$NAME

    _pau_install_app_from_dist $NAME $DIST
}

function _pau_delete {
    NAME=$1
    APPDIR=~/.local/pau/installations/$NAME
    SHIM=~/.local/pau/shims/$NAME

    rm ~/.local/bin/$NAME
    rm $SHIM
    rm -rf $APPDIR
}

function _pau_list {
    \ls -1 ~/.local/pau/installations/
}

function _pau_main {
    # main
    PERL=$(which perl)

    case $1 in
        install)
            shift
            _pau_install "$@"
            ;;
        delete)
            shift
            _pau_delete "$@"
            ;;
        list)
            shift
            _pau_list
            ;;
        *)
            _pau_usage
            ;;
    esac
}

_pau_main "$@"
